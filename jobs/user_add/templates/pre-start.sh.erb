#!/bin/bash

set -ex

<% if p('persistent_homes') %>
  home_dir="/var/vcap/store/home"
  mkdir -p "$home_dir"
<% else %>
  home_dir="/home"
<% end %>

<% p('users').each do |user_hash| %>
  <%  user = user_hash['name']
      sudo = user_hash['sudo'].nil? ? true : !!user_hash['sudo']
      crypted_password = user_hash['crypted_password']
      public_key = user_hash['public_key']

      if user.nil? || user.empty?
        raise "User must be configured with a 'name' attribute. '#{user_hash}'"
      end

      if crypted_password.nil? && public_key.nil?
        raise "User: '#{user}' must contain one of 'crypted_password' or 'public_key' key/values."
      end

      if !crypted_password.nil? && !crypted_password.match(/^\$6\$/)
        raise "User: '#{user}' with crypted_password: '#{crypted_password}' does not appear to be a SHA512 encrypted password."
      end
      %>
  # when entity exists and has a different home directory, migrate it
  entity=$(getent passwd <%=user%> || true)
  if [ -n "$entity" ]; then
    entity_home=$(echo "$entity" | awk -F':' '{print $(NF-1)}')
    if [ "$entity_home" != "$home_dir/<%=user%>" ]; then
      usermod -m -d "$home_dir/<%=user%>" <%=user%> || mkdir -p "$home_dir/<%=user%>"
    fi
  else
    useradd --create-home <%=user%> --base-dir "$home_dir"
  fi
  chown -R <%=user%>: "$home_dir/<%=user%>"
  passwd -d <%=user%>

  <% if user_hash['shell'].nil? %>
    usermod -s /bin/bash <%=user%>
  <% else %>
    usermod -s <%=user_hash['shell']%> <%=user%>
  <% end %>

  if grep -q 'bosh_sshers' /etc/group; then
    <% if sudo %>
      usermod -G vcap,admin,bosh_sudoers,bosh_sshers <%=user%>
    <% else %>
      usermod -G vcap,bosh_sshers <%=user%>
    <% end %>
  fi

  chmod 700 ~<%=user%>
  mkdir -p ~<%=user%>/.ssh
  chmod 700 ~<%=user%>/.ssh
  rm -f ~<%=user%>/.ssh/authorized_keys
  chown -R <%=user%> ~<%=user%>/.ssh

  <% if !crypted_password.nil? %>
    echo '<%=user%>:<%=crypted_password%>' | chpasswd -e
  <% end %>

  <% if !public_key.nil?  %>
    echo '<%=public_key%>' > ~<%=user%>/.ssh/authorized_keys
    chmod 600 ~<%=user%>/.ssh/authorized_keys
    chown -R <%=user%> ~<%=user%>/.ssh
  <% end %>
<% end %>
